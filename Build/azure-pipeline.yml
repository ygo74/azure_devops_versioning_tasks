# trigger:
# - master

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: publish_extension # Rename to whatever you named your variable group in the prerequisite stage of step 6

stages:
  - stage: Run_and_publish_unit_tests
    displayName: Build and tests tasks
    jobs:
      - job:
        displayName: Build and tests $(taskName)
        strategy:
          matrix:
            CalculateNextVersionV1:
              taskName: 'CalculateNextVersionV1'
          maxParallel: 2
        variables:
          taskName: CalculateNextVersionV1
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"

          - task: Npm@1
            displayName: Install Build dependencies
            inputs:
              command: 'install'
              workingDir: '$(Build.SourcesDirectory)'


          - task: Npm@1
            displayName: Compile Task $(taskName)
            inputs:
              command: 'custom'
              workingDir: '$(Build.SourcesDirectory)'
              customCommand: 'run build -- --task $(taskName)'


          # - task:  Npm@1
          #   displayName: Run tests for $(taskName)
          #   inputs:
          #     command: 'custom'
          #     workingDir: '$(Build.SourcesDirectory)'
          #     customCommand: 'run test -- --task $(taskName)'

          - script: npm test -- --task $(taskName)
            env:
              DEBUG: mocha*

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*-results.xml'

  - stage: Package_extension_and_publish_build_artifacts
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"

          - task: Npm@1
            displayName: Install Build dependencies
            inputs:
              command: 'install'
              workingDir: '$(Build.SourcesDirectory)'


          - task: Npm@1
            displayName: Compile Task CalculateNextVersionV1
            inputs:
              command: 'custom'
              workingDir: '$(Build.SourcesDirectory)'
              customCommand: 'run build -- --task CalculateNextVersionV1'

          - task: QueryAzureDevOpsExtensionVersion@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'ygo74_publisher' # Change to whatever you named the service connection
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              versionAction: 'Patch'
              outputVariable: 'Task.Extension.Version'

          - task: PackageAzureDevOpsExtension@3
            inputs:
              rootFolder: '$(System.DefaultWorkingDirectory)'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              extensionVersion: '$(Task.Extension.Version)'
              patternManifest: 'azure-devops-extension.json'
              updateTasksVersion: true
              updateTasksVersionType: 'patch'
              extensionVisibility: 'private' # Change to public if you're publishing to the marketplace
              extensionPricing: 'free'

          - task: CopyFiles@2
            displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
            inputs:
              Contents: "**/*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(ArtifactName)'
              publishLocation: 'Container'

  - stage: Download_build_artifacts_and_publish_the_extension
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "$(ArtifactName)"
              downloadPath: "$(System.DefaultWorkingDirectory)"

          - task: PublishAzureDevOpsExtension@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'ygo74_publisher' # Change to whatever you named the service connection
              fileType: 'vsix'
              # vsixFile: '/$(PublisherID).*.vsix'
              vsixFile: '$(PublisherID).Versioning-tasks/$(PublisherID).Versioning-tasks-*.vsix'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              updateTasksVersion: false
              extensionVisibility: 'private' # Change to public if you're publishing to the marketplace
              extensionPricing: 'free'